# operator.lowdefy.yaml
data:
  _mql.aggregate:
    pipeline:
      - $match:
          _id: 1
      - $project:
          name: 1
          age: 1
# operator.lowdefy.yaml
data:
  _mql.aggregate:
    pipeline:
      - $match:
          a:
            _not:
              _if_none:
                - _state: one
                - null
      - $project:
          name: 1
          age: 1
# operator.lowdefy.yaml
ddd:
  _js:
    ref: const v = console.log('hello');
# operator.lowdefy.yaml
fff:
  _js: "const v = console.log('world');"
# operator.lowdefy.yaml
ggg:
  _js: 'const v = console.log("world");'

# string.unquoted.js.operator.lowdefy.yaml
fff:
  _js: const v = console.log('hello');
# string.block.js.operator.lowdefy.yaml
iii:
  _js: |
    const x = console.log("world");
hhh: |
  new Date();
# string.unquoted.ref.operator.lowdefy.yaml
layout:
  _ref: more.yaml
# string.unquoted.path.ref.operator.lowdefy.yaml
style:
  _ref:
    path: some.yaml
# string.unquoted.path.ref.operator.lowdefy.yaml
blocks:
  _ref:
    other: blue
    path: pages/components/card.yaml
    sd: one
# string.unquoted.nunjucks.operator.lowdefy.yaml
aaaa:
  _nunjucks: <table>if another {% if raw %}{{ node | safe }}{% endif %} wewfr</table>
# string.block.nunjucks.yaml
eee:
  _nunjucks: >
    <i>if another {% if raw %}{{ node | safe }}{% endif %} wewfr</i>
# string.block.nunjucks.yaml
bbbb:
  _nunjucks: |
    <div>if another {% if raw %}{{ node | safe }}{% endif %} wewfr</div>
# string.block.template.nunjucks.operator.lowdefy.yaml
cccc:
  _nunjucks:
    template: |
      <p>if another {% if raw %}{{ node | safe }}{% endif %} wewfr</p>
    on:
      var: something
# string.block.value.nunjucks.operator.lowdefy.yaml
yyy:
  _nunjucks:
    template: <span class="red"> if another {% if raw %}{{ node | safe }}{% endif %} wewfr</span>
    on:
      value: 10
