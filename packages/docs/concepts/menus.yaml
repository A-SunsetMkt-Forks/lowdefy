# Copyright 2020-2022 Lowdefy, Inc

# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at

#     http://www.apache.org/licenses/LICENSE-2.0

# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

_ref:
  path: templates/general.yaml.njk
  vars:
    pageId: menus
    pageTitle: Menus
    section: Concepts
    filePath: concepts/menus.yaml
    content:
      - id: alert2
        type: Alert
        properties:
          type: info
          showIcon: false
          message: The menu items are filtered according to the roles given to the authenticated user, if a user has been authenticated.

      - id: md1
        type: MarkdownWithCode
        properties:
          content: |
            Menu objects are objects with links to pages. They are used by blocks like `PageSiderMenu` to render the links in the menu. If no menus are provided, a default menu is created, with links to all of the defined pages, and with their pageIds as menu item titles.

            Blocks like `PageSiderMenu` use the menu with `id: default` by default. This means that if you create a menu object with `id: default`, this will be used unless another menu is configured.

            More than one menu can be configured in an app. As an example, this can be used when two logically different sections in the app need different menus.

            If OpenID Connect authentication and role based authentication is configured, pages that the user is restricted from seeing are filtered from the menu object.

            The menu objects can be obtained by using the [`_menu`](/_menu) operator.

            The schema for a menu object is:

            - `id: string`: __Required__ - A identifier for the menu. If it is `default`, it will be used as default by pages.
            - `links: object[]`: An array of `MenuLink` or `MenuGroup` objects that form the links in the menu. `MenuGroups` can be two levels deep.

            The schema for a `MenuLink` is:
            - `id: string`: __Required__ - A identifier for the link unique to the menu.
            - `type: string`: __Required__ - The type should be `MenuLink`.
            - `pageId: string`: The id of the page to link to. Used as the title if no title is provided.
            - `url: string`: An external url to link to.
            -  `properties: object`: The properties of the menu link. These are:
                - `title: string`: The title to display for the link.
                - `icon: string | object`: The name of an [Ant Design Icon](https://ant.design/components/icon/) or properties of an Icon block to use as the icon for the link. The icon is only shown if the link is at the top level of the menu (not in a menu group).

            The schema for a `MenuGroup` is:
            - `id: string`: __Required__ - A identifier for the group unique to the menu.
            - `type: string`: __Required__ - The type should be `MenuGroup`.
            -  `properties: object`: The properties of the menu group. These are:
                - `title: string`: The title to display for the group.
                - `icon: string | object`: The name of an [Ant Design Icon](https://ant.design/components/icon/) or properties of an Icon block to use as the icon for the group. The icon is only shown if the group is at the top level of the menu (not in a menu group).
            - `links: object[]`: An array of `MenuLink` or `MenuGroup` objects that are should be grouped together in the group.

            ###### Menus example:
            ```yaml
            lowdefy: LOWDEFY_VERSION
            menus:
              - id: default
                links:
                  - id: page1
                    type: MenuLink
                    pageId: page1
                    properties:
                      title: Page 1
                      icon: AiOutlineFile
                  - id: top-group
                    properties:
                      title: Group
                      icon: AiOutlineGroup
                    links:
                      - id: page2
                        type: MenuLink
                        pageId: page2 # pageId will be used as link title
                      - id: external
                        type: MenuLink
                        url: https://external.com
                        properties:
                          title: External site
                      - id: nested-group
                        type: MenuGroup
                        properties:
                          title: Nested Group
                        links:
                          - id: page3
                            type: MenuLink
                            pageId: page3
                            properties:
                              title: Page 3
              - id: page-1-and-3
                links:
                  - id: page1
                    type: MenuLink
                    pageId: page1
                    properties:
                      title: Page 1
                      icon: AiOutlineFile
                  - id: page3
                    type: MenuLink
                    pageId: page3
                    properties:
                      title: Page 3
                      icon: AiOutlineControl
            ```
