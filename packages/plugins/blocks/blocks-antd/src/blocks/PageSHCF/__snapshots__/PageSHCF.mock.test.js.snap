// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Mock render - areas.content - value[0] - PageSHCF 1`] = `mocked`;

exports[`Mock render - areas.content - value[0] - PageSHCF 2`] = `
Array [
  Array [
    Object {
      "children": <React.Fragment>
        <LayoutBlock
          basePath=""
          blockId="areas.content_layout"
          components={
            Object {
              "Icon": [Function],
              "Link": [Function],
            }
          }
          content={
            Object {
              "content": [Function],
            }
          }
          events={Object {}}
          list={Array []}
          menus={Array []}
          methods={
            Object {
              "makeCssClass": [Function],
              "registerEvent": [Function],
              "registerMethod": [Function],
              "triggerEvent": [Function],
            }
          }
          properties={Object {}}
          required={false}
          user={Object {}}
          validation={
            Object {
              "errors": Array [],
              "status": null,
              "warnings": Array [],
            }
          }
        />
      </React.Fragment>,
      "className": "css-bl7hsc",
      "id": "areas.content",
    },
    Object {},
  ],
]
`;

exports[`Mock render - areas.footer - value[0] - PageSHCF 1`] = `mocked`;

exports[`Mock render - areas.footer - value[0] - PageSHCF 2`] = `
Array [
  Array [
    Object {
      "children": <React.Fragment>
        <LayoutBlock
          basePath=""
          blockId="areas.footer_layout"
          components={
            Object {
              "Icon": [Function],
              "Link": [Function],
            }
          }
          content={
            Object {
              "content": [Function],
            }
          }
          events={Object {}}
          list={Array []}
          menus={Array []}
          methods={
            Object {
              "makeCssClass": [Function],
              "registerEvent": [Function],
              "registerMethod": [Function],
              "triggerEvent": [Function],
            }
          }
          properties={Object {}}
          required={false}
          user={Object {}}
          validation={
            Object {
              "errors": Array [],
              "status": null,
              "warnings": Array [],
            }
          }
        />
      </React.Fragment>,
      "className": "css-bl7hsc",
      "id": "areas.footer",
    },
    Object {},
  ],
]
`;

exports[`Mock render - areas.header - value[0] - PageSHCF 1`] = `mocked`;

exports[`Mock render - areas.header - value[0] - PageSHCF 2`] = `
Array [
  Array [
    Object {
      "children": <React.Fragment>
        <LayoutBlock
          basePath=""
          blockId="areas.header_layout"
          components={
            Object {
              "Icon": [Function],
              "Link": [Function],
            }
          }
          content={
            Object {
              "content": [Function],
            }
          }
          events={Object {}}
          list={Array []}
          menus={Array []}
          methods={
            Object {
              "makeCssClass": [Function],
              "registerEvent": [Function],
              "registerMethod": [Function],
              "triggerEvent": [Function],
            }
          }
          properties={Object {}}
          required={false}
          user={Object {}}
          validation={
            Object {
              "errors": Array [],
              "status": null,
              "warnings": Array [],
            }
          }
        />
      </React.Fragment>,
      "className": "css-bl7hsc",
      "id": "areas.header",
    },
    Object {},
  ],
]
`;

exports[`Mock render - areas.sider - value[0] - PageSHCF 1`] = `mocked`;

exports[`Mock render - areas.sider - value[0] - PageSHCF 2`] = `
Array [
  Array [
    Object {
      "children": <React.Fragment>
        <SiderBlock
          basePath=""
          blockId="areas.sider_sider"
          components={
            Object {
              "Icon": [Function],
              "Link": [Function],
            }
          }
          content={
            Object {
              "content": [Function],
            }
          }
          events={Object {}}
          list={Array []}
          menus={Array []}
          methods={
            Object {
              "makeCssClass": [MockFunction],
              "registerEvent": [Function],
              "registerMethod": [Function],
              "triggerEvent": [Function],
            }
          }
          properties={Object {}}
          rename={
            Object {
              "events": Object {
                "onClose": "onSiderClose",
                "onOpen": "onSiderOpen",
              },
              "methods": Object {
                "setOpen": "setSiderOpen",
                "toggleOpen": "toggleSiderOpen",
              },
            }
          }
          required={false}
          user={Object {}}
          validation={
            Object {
              "errors": Array [],
              "status": null,
              "warnings": Array [],
            }
          }
        />
        <LayoutBlock
          basePath=""
          blockId="areas.sider_layout"
          components={
            Object {
              "Icon": [Function],
              "Link": [Function],
            }
          }
          content={
            Object {
              "content": [Function],
            }
          }
          events={Object {}}
          list={Array []}
          menus={Array []}
          methods={
            Object {
              "makeCssClass": [Function],
              "registerEvent": [Function],
              "registerMethod": [Function],
              "triggerEvent": [Function],
            }
          }
          properties={Object {}}
          required={false}
          user={Object {}}
          validation={
            Object {
              "errors": Array [],
              "status": null,
              "warnings": Array [],
            }
          }
        />
      </React.Fragment>,
      "className": "css-bl7hsc",
      "id": "areas.sider",
    },
    Object {},
  ],
]
`;

exports[`Mock render - default - value[0] - PageSHCF 1`] = `mocked`;

exports[`Mock render - default - value[0] - PageSHCF 2`] = `
Array [
  Array [
    Object {
      "children": <React.Fragment>
        <LayoutBlock
          basePath=""
          blockId="default_layout"
          components={
            Object {
              "Icon": [Function],
              "Link": [Function],
            }
          }
          content={
            Object {
              "content": [Function],
            }
          }
          events={Object {}}
          list={Array []}
          menus={Array []}
          methods={
            Object {
              "makeCssClass": [Function],
              "registerEvent": [Function],
              "registerMethod": [Function],
              "triggerEvent": [Function],
            }
          }
          properties={Object {}}
          required={false}
          user={Object {}}
          validation={
            Object {
              "errors": Array [],
              "status": null,
              "warnings": Array [],
            }
          }
        />
      </React.Fragment>,
      "className": "css-bl7hsc",
      "id": "default",
    },
    Object {},
  ],
]
`;

exports[`Mock render - properties.content.style: border: 5px solid blue - value[0] - PageSHCF 1`] = `mocked`;

exports[`Mock render - properties.content.style: border: 5px solid blue - value[0] - PageSHCF 2`] = `
Array [
  Array [
    Object {
      "children": <React.Fragment>
        <SiderBlock
          basePath=""
          blockId="properties.content.style: border: 5px solid blue_sider"
          components={
            Object {
              "Icon": [Function],
              "Link": [Function],
            }
          }
          content={
            Object {
              "content": [Function],
            }
          }
          events={Object {}}
          list={Array []}
          menus={Array []}
          methods={
            Object {
              "makeCssClass": [MockFunction],
              "registerEvent": [Function],
              "registerMethod": [Function],
              "triggerEvent": [Function],
            }
          }
          properties={Object {}}
          rename={
            Object {
              "events": Object {
                "onClose": "onSiderClose",
                "onOpen": "onSiderOpen",
              },
              "methods": Object {
                "setOpen": "setSiderOpen",
                "toggleOpen": "toggleSiderOpen",
              },
            }
          }
          required={false}
          user={Object {}}
          validation={
            Object {
              "errors": Array [],
              "status": null,
              "warnings": Array [],
            }
          }
        />
        <LayoutBlock
          basePath=""
          blockId="properties.content.style: border: 5px solid blue_layout"
          components={
            Object {
              "Icon": [Function],
              "Link": [Function],
            }
          }
          content={
            Object {
              "content": [Function],
            }
          }
          events={Object {}}
          list={Array []}
          menus={Array []}
          methods={
            Object {
              "makeCssClass": [Function],
              "registerEvent": [Function],
              "registerMethod": [Function],
              "triggerEvent": [Function],
            }
          }
          properties={Object {}}
          required={false}
          user={Object {}}
          validation={
            Object {
              "errors": Array [],
              "status": null,
              "warnings": Array [],
            }
          }
        />
      </React.Fragment>,
      "className": "css-bl7hsc",
      "id": "properties.content.style: border: 5px solid blue",
    },
    Object {},
  ],
]
`;

exports[`Mock render - properties.footer.style: border: 5px solid blue - value[0] - PageSHCF 1`] = `mocked`;

exports[`Mock render - properties.footer.style: border: 5px solid blue - value[0] - PageSHCF 2`] = `
Array [
  Array [
    Object {
      "children": <React.Fragment>
        <SiderBlock
          basePath=""
          blockId="properties.footer.style: border: 5px solid blue_sider"
          components={
            Object {
              "Icon": [Function],
              "Link": [Function],
            }
          }
          content={
            Object {
              "content": [Function],
            }
          }
          events={Object {}}
          list={Array []}
          menus={Array []}
          methods={
            Object {
              "makeCssClass": [MockFunction],
              "registerEvent": [Function],
              "registerMethod": [Function],
              "triggerEvent": [Function],
            }
          }
          properties={Object {}}
          rename={
            Object {
              "events": Object {
                "onClose": "onSiderClose",
                "onOpen": "onSiderOpen",
              },
              "methods": Object {
                "setOpen": "setSiderOpen",
                "toggleOpen": "toggleSiderOpen",
              },
            }
          }
          required={false}
          user={Object {}}
          validation={
            Object {
              "errors": Array [],
              "status": null,
              "warnings": Array [],
            }
          }
        />
        <LayoutBlock
          basePath=""
          blockId="properties.footer.style: border: 5px solid blue_layout"
          components={
            Object {
              "Icon": [Function],
              "Link": [Function],
            }
          }
          content={
            Object {
              "content": [Function],
            }
          }
          events={Object {}}
          list={Array []}
          menus={Array []}
          methods={
            Object {
              "makeCssClass": [Function],
              "registerEvent": [Function],
              "registerMethod": [Function],
              "triggerEvent": [Function],
            }
          }
          properties={Object {}}
          required={false}
          user={Object {}}
          validation={
            Object {
              "errors": Array [],
              "status": null,
              "warnings": Array [],
            }
          }
        />
      </React.Fragment>,
      "className": "css-bl7hsc",
      "id": "properties.footer.style: border: 5px solid blue",
    },
    Object {},
  ],
]
`;

exports[`Mock render - properties.header.color: #4432a8  - value[0] - PageSHCF 1`] = `mocked`;

exports[`Mock render - properties.header.color: #4432a8  - value[0] - PageSHCF 2`] = `
Array [
  Array [
    Object {
      "children": <React.Fragment>
        <SiderBlock
          basePath=""
          blockId="properties.header.color: #4432a8 _sider"
          components={
            Object {
              "Icon": [Function],
              "Link": [Function],
            }
          }
          content={
            Object {
              "content": [Function],
            }
          }
          events={Object {}}
          list={Array []}
          menus={Array []}
          methods={
            Object {
              "makeCssClass": [MockFunction],
              "registerEvent": [Function],
              "registerMethod": [Function],
              "triggerEvent": [Function],
            }
          }
          properties={Object {}}
          rename={
            Object {
              "events": Object {
                "onClose": "onSiderClose",
                "onOpen": "onSiderOpen",
              },
              "methods": Object {
                "setOpen": "setSiderOpen",
                "toggleOpen": "toggleSiderOpen",
              },
            }
          }
          required={false}
          user={Object {}}
          validation={
            Object {
              "errors": Array [],
              "status": null,
              "warnings": Array [],
            }
          }
        />
        <LayoutBlock
          basePath=""
          blockId="properties.header.color: #4432a8 _layout"
          components={
            Object {
              "Icon": [Function],
              "Link": [Function],
            }
          }
          content={
            Object {
              "content": [Function],
            }
          }
          events={Object {}}
          list={Array []}
          menus={Array []}
          methods={
            Object {
              "makeCssClass": [Function],
              "registerEvent": [Function],
              "registerMethod": [Function],
              "triggerEvent": [Function],
            }
          }
          properties={Object {}}
          required={false}
          user={Object {}}
          validation={
            Object {
              "errors": Array [],
              "status": null,
              "warnings": Array [],
            }
          }
        />
      </React.Fragment>,
      "className": "css-bl7hsc",
      "id": "properties.header.color: #4432a8 ",
    },
    Object {},
  ],
]
`;

exports[`Mock render - properties.header.style: border: 5px solid blue - value[0] - PageSHCF 1`] = `mocked`;

exports[`Mock render - properties.header.style: border: 5px solid blue - value[0] - PageSHCF 2`] = `
Array [
  Array [
    Object {
      "children": <React.Fragment>
        <SiderBlock
          basePath=""
          blockId="properties.header.style: border: 5px solid blue_sider"
          components={
            Object {
              "Icon": [Function],
              "Link": [Function],
            }
          }
          content={
            Object {
              "content": [Function],
            }
          }
          events={Object {}}
          list={Array []}
          menus={Array []}
          methods={
            Object {
              "makeCssClass": [MockFunction],
              "registerEvent": [Function],
              "registerMethod": [Function],
              "triggerEvent": [Function],
            }
          }
          properties={Object {}}
          rename={
            Object {
              "events": Object {
                "onClose": "onSiderClose",
                "onOpen": "onSiderOpen",
              },
              "methods": Object {
                "setOpen": "setSiderOpen",
                "toggleOpen": "toggleSiderOpen",
              },
            }
          }
          required={false}
          user={Object {}}
          validation={
            Object {
              "errors": Array [],
              "status": null,
              "warnings": Array [],
            }
          }
        />
        <LayoutBlock
          basePath=""
          blockId="properties.header.style: border: 5px solid blue_layout"
          components={
            Object {
              "Icon": [Function],
              "Link": [Function],
            }
          }
          content={
            Object {
              "content": [Function],
            }
          }
          events={Object {}}
          list={Array []}
          menus={Array []}
          methods={
            Object {
              "makeCssClass": [Function],
              "registerEvent": [Function],
              "registerMethod": [Function],
              "triggerEvent": [Function],
            }
          }
          properties={Object {}}
          required={false}
          user={Object {}}
          validation={
            Object {
              "errors": Array [],
              "status": null,
              "warnings": Array [],
            }
          }
        />
      </React.Fragment>,
      "className": "css-bl7hsc",
      "id": "properties.header.style: border: 5px solid blue",
    },
    Object {},
  ],
]
`;

exports[`Mock render - properties.header.theme: light - dark is default - value[0] - PageSHCF 1`] = `mocked`;

exports[`Mock render - properties.header.theme: light - dark is default - value[0] - PageSHCF 2`] = `
Array [
  Array [
    Object {
      "children": <React.Fragment>
        <SiderBlock
          basePath=""
          blockId="properties.header.theme: light - dark is default_sider"
          components={
            Object {
              "Icon": [Function],
              "Link": [Function],
            }
          }
          content={
            Object {
              "content": [Function],
            }
          }
          events={Object {}}
          list={Array []}
          menus={Array []}
          methods={
            Object {
              "makeCssClass": [MockFunction],
              "registerEvent": [Function],
              "registerMethod": [Function],
              "triggerEvent": [Function],
            }
          }
          properties={Object {}}
          rename={
            Object {
              "events": Object {
                "onClose": "onSiderClose",
                "onOpen": "onSiderOpen",
              },
              "methods": Object {
                "setOpen": "setSiderOpen",
                "toggleOpen": "toggleSiderOpen",
              },
            }
          }
          required={false}
          user={Object {}}
          validation={
            Object {
              "errors": Array [],
              "status": null,
              "warnings": Array [],
            }
          }
        />
        <LayoutBlock
          basePath=""
          blockId="properties.header.theme: light - dark is default_layout"
          components={
            Object {
              "Icon": [Function],
              "Link": [Function],
            }
          }
          content={
            Object {
              "content": [Function],
            }
          }
          events={Object {}}
          list={Array []}
          menus={Array []}
          methods={
            Object {
              "makeCssClass": [Function],
              "registerEvent": [Function],
              "registerMethod": [Function],
              "triggerEvent": [Function],
            }
          }
          properties={Object {}}
          required={false}
          user={Object {}}
          validation={
            Object {
              "errors": Array [],
              "status": null,
              "warnings": Array [],
            }
          }
        />
      </React.Fragment>,
      "className": "css-bl7hsc",
      "id": "properties.header.theme: light - dark is default",
    },
    Object {},
  ],
]
`;

exports[`Mock render - properties.main.style: border: 5px solid blue - value[0] - PageSHCF 1`] = `mocked`;

exports[`Mock render - properties.main.style: border: 5px solid blue - value[0] - PageSHCF 2`] = `
Array [
  Array [
    Object {
      "children": <React.Fragment>
        <SiderBlock
          basePath=""
          blockId="properties.main.style: border: 5px solid blue_sider"
          components={
            Object {
              "Icon": [Function],
              "Link": [Function],
            }
          }
          content={
            Object {
              "content": [Function],
            }
          }
          events={Object {}}
          list={Array []}
          menus={Array []}
          methods={
            Object {
              "makeCssClass": [MockFunction],
              "registerEvent": [Function],
              "registerMethod": [Function],
              "triggerEvent": [Function],
            }
          }
          properties={Object {}}
          rename={
            Object {
              "events": Object {
                "onClose": "onSiderClose",
                "onOpen": "onSiderOpen",
              },
              "methods": Object {
                "setOpen": "setSiderOpen",
                "toggleOpen": "toggleSiderOpen",
              },
            }
          }
          required={false}
          user={Object {}}
          validation={
            Object {
              "errors": Array [],
              "status": null,
              "warnings": Array [],
            }
          }
        />
        <LayoutBlock
          basePath=""
          blockId="properties.main.style: border: 5px solid blue_layout"
          components={
            Object {
              "Icon": [Function],
              "Link": [Function],
            }
          }
          content={
            Object {
              "content": [Function],
            }
          }
          events={Object {}}
          list={Array []}
          menus={Array []}
          methods={
            Object {
              "makeCssClass": [Function],
              "registerEvent": [Function],
              "registerMethod": [Function],
              "triggerEvent": [Function],
            }
          }
          properties={
            Object {
              "style": Object {
                "border": "5px solid blue",
              },
            }
          }
          required={false}
          user={Object {}}
          validation={
            Object {
              "errors": Array [],
              "status": null,
              "warnings": Array [],
            }
          }
        />
      </React.Fragment>,
      "className": "css-bl7hsc",
      "id": "properties.main.style: border: 5px solid blue",
    },
    Object {},
  ],
]
`;

exports[`Mock render - properties.sider.style: border: 5px solid blue - value[0] - PageSHCF 1`] = `mocked`;

exports[`Mock render - properties.sider.style: border: 5px solid blue - value[0] - PageSHCF 2`] = `
Array [
  Array [
    Object {
      "children": <React.Fragment>
        <SiderBlock
          basePath=""
          blockId="properties.sider.style: border: 5px solid blue_sider"
          components={
            Object {
              "Icon": [Function],
              "Link": [Function],
            }
          }
          content={
            Object {
              "content": [Function],
            }
          }
          events={Object {}}
          list={Array []}
          menus={Array []}
          methods={
            Object {
              "makeCssClass": [MockFunction],
              "registerEvent": [Function],
              "registerMethod": [Function],
              "triggerEvent": [Function],
            }
          }
          properties={
            Object {
              "style": Object {
                "border": "5px solid blue",
              },
            }
          }
          rename={
            Object {
              "events": Object {
                "onClose": "onSiderClose",
                "onOpen": "onSiderOpen",
              },
              "methods": Object {
                "setOpen": "setSiderOpen",
                "toggleOpen": "toggleSiderOpen",
              },
            }
          }
          required={false}
          user={Object {}}
          validation={
            Object {
              "errors": Array [],
              "status": null,
              "warnings": Array [],
            }
          }
        />
        <LayoutBlock
          basePath=""
          blockId="properties.sider.style: border: 5px solid blue_layout"
          components={
            Object {
              "Icon": [Function],
              "Link": [Function],
            }
          }
          content={
            Object {
              "content": [Function],
            }
          }
          events={Object {}}
          list={Array []}
          menus={Array []}
          methods={
            Object {
              "makeCssClass": [Function],
              "registerEvent": [Function],
              "registerMethod": [Function],
              "triggerEvent": [Function],
            }
          }
          properties={Object {}}
          required={false}
          user={Object {}}
          validation={
            Object {
              "errors": Array [],
              "status": null,
              "warnings": Array [],
            }
          }
        />
      </React.Fragment>,
      "className": "css-bl7hsc",
      "id": "properties.sider.style: border: 5px solid blue",
    },
    Object {},
  ],
]
`;

exports[`Mock render - properties.sider.theme: light - dark is default - value[0] - PageSHCF 1`] = `mocked`;

exports[`Mock render - properties.sider.theme: light - dark is default - value[0] - PageSHCF 2`] = `
Array [
  Array [
    Object {
      "children": <React.Fragment>
        <SiderBlock
          basePath=""
          blockId="properties.sider.theme: light - dark is default_sider"
          components={
            Object {
              "Icon": [Function],
              "Link": [Function],
            }
          }
          content={
            Object {
              "content": [Function],
            }
          }
          events={Object {}}
          list={Array []}
          menus={Array []}
          methods={
            Object {
              "makeCssClass": [MockFunction],
              "registerEvent": [Function],
              "registerMethod": [Function],
              "triggerEvent": [Function],
            }
          }
          properties={
            Object {
              "theme": "light",
            }
          }
          rename={
            Object {
              "events": Object {
                "onClose": "onSiderClose",
                "onOpen": "onSiderOpen",
              },
              "methods": Object {
                "setOpen": "setSiderOpen",
                "toggleOpen": "toggleSiderOpen",
              },
            }
          }
          required={false}
          user={Object {}}
          validation={
            Object {
              "errors": Array [],
              "status": null,
              "warnings": Array [],
            }
          }
        />
        <LayoutBlock
          basePath=""
          blockId="properties.sider.theme: light - dark is default_layout"
          components={
            Object {
              "Icon": [Function],
              "Link": [Function],
            }
          }
          content={
            Object {
              "content": [Function],
            }
          }
          events={Object {}}
          list={Array []}
          menus={Array []}
          methods={
            Object {
              "makeCssClass": [Function],
              "registerEvent": [Function],
              "registerMethod": [Function],
              "triggerEvent": [Function],
            }
          }
          properties={Object {}}
          required={false}
          user={Object {}}
          validation={
            Object {
              "errors": Array [],
              "status": null,
              "warnings": Array [],
            }
          }
        />
      </React.Fragment>,
      "className": "css-bl7hsc",
      "id": "properties.sider.theme: light - dark is default",
    },
    Object {},
  ],
]
`;

exports[`Mock render - properties.style: border: 5px solid blue - value[0] - PageSHCF 1`] = `mocked`;

exports[`Mock render - properties.style: border: 5px solid blue - value[0] - PageSHCF 2`] = `
Array [
  Array [
    Object {
      "children": <React.Fragment>
        <SiderBlock
          basePath=""
          blockId="properties.style: border: 5px solid blue_sider"
          components={
            Object {
              "Icon": [Function],
              "Link": [Function],
            }
          }
          content={
            Object {
              "content": [Function],
            }
          }
          events={Object {}}
          list={Array []}
          menus={Array []}
          methods={
            Object {
              "makeCssClass": [MockFunction],
              "registerEvent": [Function],
              "registerMethod": [Function],
              "triggerEvent": [Function],
            }
          }
          properties={Object {}}
          rename={
            Object {
              "events": Object {
                "onClose": "onSiderClose",
                "onOpen": "onSiderOpen",
              },
              "methods": Object {
                "setOpen": "setSiderOpen",
                "toggleOpen": "toggleSiderOpen",
              },
            }
          }
          required={false}
          user={Object {}}
          validation={
            Object {
              "errors": Array [],
              "status": null,
              "warnings": Array [],
            }
          }
        />
        <LayoutBlock
          basePath=""
          blockId="properties.style: border: 5px solid blue_layout"
          components={
            Object {
              "Icon": [Function],
              "Link": [Function],
            }
          }
          content={
            Object {
              "content": [Function],
            }
          }
          events={Object {}}
          list={Array []}
          menus={Array []}
          methods={
            Object {
              "makeCssClass": [Function],
              "registerEvent": [Function],
              "registerMethod": [Function],
              "triggerEvent": [Function],
            }
          }
          properties={Object {}}
          required={false}
          user={Object {}}
          validation={
            Object {
              "errors": Array [],
              "status": null,
              "warnings": Array [],
            }
          }
        />
      </React.Fragment>,
      "className": "css-jxnkt0",
      "id": "properties.style: border: 5px solid blue",
    },
    Object {},
  ],
]
`;
